rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      // Never set to true in prod, as it enables all read/writes.
      allow read, write: if false
    }

    match /analytics/counts {
      allow read: if true
    }

    match /analytics/calendly {
      allow read, write: if true
    }

    match /users/{userId} {
      function isAuthUser() {
        return request.auth != null && request.auth.uid == userId;
      }
      // Users can read and update their profile.
      allow read, create, update: if isAuthUser();

      // TODO(cyrille): Add tests once we can make sure the JS heap does not overflow.
      match /partners/{userPartnerId} {
        // Users can read their own partner identifications
        allow read: if isAuthUser();
        // Users can create their own partner identifications but:
        allow create: if isAuthUser()
          // the document should only specify the partnerId and the userPartnerId
          && request.resource.data.keys().hasOnly(['partnerId', 'userPartnerId'])
          // the document ID should be the same as the userPartnerId
          && request.resource.id == request.resource.data.userPartnerId
          // the partnerId should be one of the pre-defined partner IDs.
          && request.resource.data.partnerId in ['bob', 'chance', 'job-ready', 'generation']
      }
    }
  }
}
