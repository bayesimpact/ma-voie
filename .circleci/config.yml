version: 2
jobs:
  build-test-publish:
    docker:
      - image: bayesimpact/circleci
    steps:
      - checkout
      - setup_remote_docker:
          # Allows to use previous cached version of the built Docker services.
          docker_layer_caching: true
      - run:
          name: Drop the override used for dev
          command: |
            rm docker-compose.override.yml
      - run:
          name: Build Docker images
          command: docker-compose build --pull dev
      - run:
          name: Test and lint frontend client
          command: |
            docker-compose build --pull test
            docker-compose run --name test-$CIRCLE_BUILD_NUM test
            docker cp test-$CIRCLE_BUILD_NUM:/usr/app/coverage /tmp/client_coverage
            docker rm test-$CIRCLE_BUILD_NUM
            test "$CIRCLE_BRANCH" == "master" && codecov -f /tmp/client_coverage/lcov.info -F frontend_client || echo "Skip Codecov"
      - run:
          name: Test and lint Mailjet Proxy
          command: |
            docker-compose build --pull mailjet-proxy-test
      - run:
          name: Build and prepare demo as artifacts
          command: |
            docker-compose run --name dist-$CIRCLE_BUILD_NUM -e HREF_BASE="/0/demo" dev dist
            docker cp dist-$CIRCLE_BUILD_NUM:/usr/app/dist /tmp/dist
            docker rm dist-$CIRCLE_BUILD_NUM
            echo "Demo will be served at https://${CIRCLE_BUILD_NUM}-255554923-gh.circle-artifacts.com/0/demo/index.html"
      - run:
          name: Setup Google SDK
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode | gcloud --quiet auth activate-service-account --key-file=-
      - run:
          name: Build and release as a docker image
          command: |
            TAG=$(.circleci/create-docker-tag.sh)
            if [ -n "$TAG" ]; then
              docker-compose build --build-arg GIT_SHA1=$CIRCLE_SHA1 --build-arg CLIENT_VERSION=prod.$CIRCLE_SHA1 nginx
              docker-compose build --build-arg GIT_SHA1=$CIRCLE_SHA1 mailjet-proxy
              docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
              echo "Publish $TAG"
              docker tag bayesimpact/cas-contact:$CIRCLE_BUILD_NUM bayesimpact/cas-contact:$TAG
              docker tag bayesimpact/mailjet-proxy:$CIRCLE_BUILD_NUM bayesimpact/mailjet-proxy:$TAG
              docker push bayesimpact/cas-contact:$TAG
              docker push bayesimpact/mailjet-proxy:$TAG
              gcloud --quiet auth configure-docker
              docker tag bayesimpact/mailjet-proxy:$CIRCLE_BUILD_NUM eu.gcr.io/covid-cas-contact/mailjet-proxy:$TAG
              docker push eu.gcr.io/covid-cas-contact/mailjet-proxy:$TAG
              DEMO_VARS=$(get_demo_vars)
              # Start the demo server by pinging the right URL in the background.
              START_DEMO_URL="https://$DEMO_HOST/start/$TAG?$DEMO_VARS"
              echo Starting "$START_DEMO_URL"
              curl -s "$START_DEMO_URL" -o /dev/null || echo Fail
            fi
      - store_artifacts:
          path: /tmp/dist
          destination: demo


  deploy:
    docker:
      - image: bayesimpact/circleci
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Deploy app on AWS and OVH cloud
          command: bash -x release/deploy.sh "$CIRCLE_TAG"

  check-recent-todos:
    docker:
      - image: bayesimpact/circleci
    steps:
      - checkout
      - run:
          name: Check the TODOs that were added or removed recently.
          command: bash -x .circleci/check_recent_todos.sh

  test-for-base-change:
    docker:
      - image: bayesimpact/circleci
    steps:
      - checkout
      - setup_remote_docker:
          # Allows to use previous cached version of the built Docker services.
          docker_layer_caching: true
      - run: docker-compose build --pull test

workflows:
  version: 2
  # This will run for all branches, but not for tags.
  build-test-publish:
    jobs:
      - build-test-publish

  # This will run for all tags, but not for branches.
  release:
    jobs:
      - build-test-publish:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - wait-for-manual-approval:
          type: approval
          requires:
            # TODO(pascal): Ping Slack to request a manual approval.
            - build-test-publish
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - wait-for-manual-approval
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

  test-for-base-change:
    jobs:
      - test-for-base-change:
          filters:
            branches:
              only: /.*-react-base/

  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 5"
          filters:
            branches:
              only:
                - master
    jobs:
      - check-recent-todos

experimental:
  notify:
    branches:
      only:
        - master
