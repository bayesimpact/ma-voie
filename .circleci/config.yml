version: 2
jobs:
  build-test-publish:
    docker:
      - image: bayesimpact/circleci
    steps:
      - checkout
      - setup_remote_docker:
          # Allows to use previous cached version of the built Docker services.
          docker_layer_caching: true
          version: 19.03.13
      - run:
          name: Check which parts of the CI should be run
          command: .circleci/should_run_ci.sh "$CIRCLE_BRANCH" "$CIRCLE_TAG"
      - run:
          name: Drop the override used for dev
          command: |
            rm docker-compose.override.yml
      - run:
          name: Build Docker images
          command: docker-compose build --pull dev
      - run:
          name: Test and lint frontend client
          command: |
            test -e skip-client || (
              docker-compose build --pull test
              docker-compose run --name test-$CIRCLE_BUILD_NUM test
              docker cp test-$CIRCLE_BUILD_NUM:/usr/app/coverage /tmp/client_coverage
              docker rm test-$CIRCLE_BUILD_NUM
              test "$CIRCLE_BRANCH" == "master" && codecov -f /tmp/client_coverage/lcov.info -F frontend_client || echo "Skip Codecov"
            )
      - run:
          name: Test and lint Firebase server
          command: |
            test -e skip-server || docker-compose build --pull server server-test
      - run:
          name: Deploy server
          command: |
            test -e skip-server || (
              if [[ "$CIRCLE_BRANCH" == 'master' ]] && ! git diff --exit-code HEAD^ -- server; then
                docker-compose run --rm server npm run deploy -- --project=demo
              fi
            )
      - run:
          name: Build and release as a docker image
          command: |
            test -e skip-client || (
              TAG=$(.circleci/create-docker-tag.sh)
              if [ -n "$TAG" ]; then
                docker-compose build --build-arg GIT_SHA1=$CIRCLE_SHA1 --build-arg CLIENT_VERSION=prod.$CIRCLE_SHA1 nginx
                echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
                echo "Publish $TAG"
                docker tag bayesimpact/ma-voie:$CIRCLE_BUILD_NUM bayesimpact/ma-voie:$TAG
                docker push bayesimpact/ma-voie:$TAG
                if [ "$CIRCLE_TAG" ]; then
                  docker tag bayesimpact/ma-voie-server:$CIRCLE_BUILD_NUM bayesimpact/ma-voie-server:$TAG
                  docker push bayesimpact/ma-voie-server:$TAG
                fi
                gcloud --quiet auth configure-docker
                DEMO_VARS=$(get_demo_vars)
                # Start the demo server by pinging the right URL in the background.
                START_DEMO_URL="https://$DEMO_HOST/start/$TAG?$DEMO_VARS"
                echo Starting "$START_DEMO_URL"
                curl -s "$START_DEMO_URL" -o /dev/null || echo Fail
              fi
            )
      - store_artifacts:
          path: /tmp/dist
          destination: demo


  deploy:
    docker:
      - image: bayesimpact/circleci
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 19.03.13
      - run:
          name: Deploy app on AWS and OVH cloud
          command: bash -x release/deploy.sh "$CIRCLE_TAG"

  check-recent-todos:
    docker:
      - image: bayesimpact/circleci
    steps:
      - checkout
      - run:
          name: Check the TODOs that were added or removed recently.
          command: check_recent_todos

  test-for-base-change:
    docker:
      - image: bayesimpact/circleci
    steps:
      - checkout
      - setup_remote_docker:
          # Allows to use previous cached version of the built Docker services.
          docker_layer_caching: true
          version: 19.03.13
      - run: docker-compose build --pull test

workflows:
  version: 2
  # This will run for all branches, but not for tags.
  build-test-publish:
    jobs:
      - build-test-publish:
          context:
            - Docker

  # This will run for all tags, but not for branches.
  release:
    jobs:
      - build-test-publish:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          context:
            - Docker
      - wait-for-manual-approval:
          type: approval
          requires:
            - build-test-publish
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - wait-for-manual-approval
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          context: Deploy

  test-for-base-change:
    jobs:
      - test-for-base-change:
          filters:
            branches:
              only: /.*-react-base/

  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 5"
          filters:
            branches:
              only:
                - master
    jobs:
      - check-recent-todos

experimental:
  notify:
    branches:
      only:
        - master
